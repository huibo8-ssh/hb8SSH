<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
    <!-- 初级配置
    <bean id="testController" class="com.mvc.controller.TestController"/>
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
			<props>
				<prop key="test.do">testController</prop>
			</props>
		</property>
    </bean> 
    -->
    <!-- 中级配置 
    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"></bean>
	<bean id="methodNameResolver" class="org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver"></bean>
    <bean class="com.mvc.controller.Test2Controller">
		<property name="methodNameResolver" ref="methodNameResolver"/>
	</bean>
    -->
    
    
    <!-- 顶级配置 注解配置 -->
    <context:annotation-config/>
    <aop:aspectj-autoproxy/>
    <!-- 扫描@Controller @Service @Repository @Component的类并且创建对象放入容器中 -->
    <context:component-scan base-package="com.ioc.controller" />
    <context:component-scan base-package="com.ioc.service.impl" />
    <context:component-scan base-package="com.ioc.dao.impl" />
    <context:component-scan base-package="com.ioc.aspectj" />
    
    <!-- 通过请求路径来映射方法名称 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="fastJsonHttpMessageConverter" />
                <!-- <ref bean="mappingJacksonHttpMessageConverter" /> -->
            </list>
        </property>
    </bean>
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/>
    <!-- <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean> -->

    <!-- 接收web请求参数的日期字符串并自动转化为Date对象  -->
    <bean id="dateConverter" class="com.ioc.utils.DateConverter" />
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
    		<list>
    			<ref bean="dateConverter"/>
    		</list>
    	</property>
	</bean>
	<mvc:annotation-driven conversion-service="conversionService"/>
    
    
    
    <!-- 配置视图解析工具类 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/view/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    
    <!--************************************整合Hibernate****************************************
	<import resource="jdbc.properties" />只能导入类似于当前xml文件的xml文件
	-->
	<context:property-placeholder location="classpath*:/com/ioc/resource/jdbc.properties" />
	<!-- <bean name="config" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:com/mvc/config/jdbc.properties"></property>
    </bean> -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
	    <property name="url" value="${jdbc.url}"/>
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<!-- 扫描方式1：扫描加了@Entity注解的实体类与数据库映射   映射包名 -->
		<property name="packagesToScan">             
			<list>                  
				<value>com.ioc.entity</value>               
			</list>         
		</property>
		<!-- 扫描方式2： 扫描xx.hbm.xml文件所存放的包路径
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath*:com/oamanager/hbm</value>
			</list>
		</property>
		-->
		<!--
		扫描方式3：映射具体的 *.hbm.xml
		<property name="mappingLocations">
			<list>
				<value>classpath*:com/wu/hbm/*.hbm.xml</value>
			</list>
		</property> 
		扫描方式4：映射具体的实体类 这里必须写具体的类名 不能以*代替
		<property name="annotatedClasses">            
			<list>                
				<value>com.wu.po.InnerUser</value>            
			</list>        
		</property>
		-->
	</bean>
	
	<bean class="org.springframework.orm.hibernate3.HibernateTemplate" p:sessionFactory-ref="sessionFactory"/>
	
	
	
	<!-- 事务管理  用在增删改时 -->
	<bean id="tx" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!--用注解方式进行事务管理  -->
	<tx:annotation-driven transaction-manager="tx"/>
	
	
	
	
	
</beans>